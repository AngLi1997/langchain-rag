from sqlalchemy import create_engine, text

DATABASE_URL = "mysql+pymysql://root:Isysc0re123@172.30.1.160:3306/bmos_mes"

table_list = [
    "bm_batch_record",
    "bm_batch_record_archive",
    "bm_batch_record_archive_generate",
    "bm_batch_record_archive_log",
    "bm_batch_record_category",
    "bm_batch_record_component",
    "bm_batch_record_component_detail",
    "bm_batch_record_expression",
    "bm_batch_record_item",
    "bm_batch_record_parse",
    "bm_batch_record_product",
    "bm_batch_record_version",
    "bm_batch_release",
    "bm_batch_release_history",
    "bm_batch_release_template",
    "bm_batch_release_template_version",
    "bm_batch_template_category",
    "bm_batch_template_info",
    "bm_batch_template_info_process",
    "bm_batch_template_operate_log",
    "bm_batch_template_version",
    "bm_business_component_instance",
    "bm_cargo_position",
    "bm_charge_recycle",
    "bm_dataset",
    "bm_dataset_category",
    "bm_dataset_point",
    "bm_dataset_point_template_relation",
    "bm_execute_attachment",
    "bm_execute_exception",
    "bm_ingredient_input_component_instance",
    "bm_ingredient_input_record",
    "bm_ingredient_plan",
    "bm_ingredient_plan_material_batch",
    "bm_ingredient_weigh_batch_process",
    "bm_ingredient_weigh_process",
    "bm_ingredient_weigh_record",
    "bm_inspect",
    "bm_inspect_config",
    "bm_inspect_config_data",
    "bm_inspect_config_material",
    "bm_inspect_info",
    "bm_inspect_result",
    "bm_liquid_preparation_measure_batch",
    "bm_liquid_preparation_measure_instance",
    "bm_liquid_preparation_measure_log",
    "bm_liquid_preparation_measure_record",
    "bm_liquid_preparation_plan",
    "bm_liquid_preparation_plan_material_batch",
    "bm_log_operation",
    "bm_lot_release",
    "bm_lot_release_history",
    "bm_lot_release_template",
    "bm_lot_release_template_category",
    "bm_lot_release_template_history",
    "bm_lot_release_template_process",
    "bm_lot_release_template_version",
    "bm_lot_summary",
    "bm_lot_summary_item",
    "bm_material",
    "bm_material_batch_field",
    "bm_material_category",
    "bm_material_field",
    "bm_output_finished_product",
    "bm_output_finished_product_result",
    "bm_output_weigh_process",
    "bm_output_weigh_record",
    "bm_plan_template",
    "bm_plan_template_batch",
    "bm_preparation_input_component_instance",
    "bm_preparation_input_record",
    "bm_preparation_produce_progress",
    "bm_preparation_produce_record",
    "bm_procedure",
    "bm_procedure_condition",
    "bm_procedure_condition_instance",
    "bm_procedure_condition_instance_history",
    "bm_procedure_confirm",
    "bm_procedure_equipment_acquisition",
    "bm_procedure_equipment_info",
    "bm_procedure_expression",
    "bm_procedure_model",
    "bm_procedure_model_group",
    "bm_procedure_model_material",
    "bm_procedure_model_room",
    "bm_procedure_step",
    "bm_procedure_step_config",
    "bm_procedure_step_model",
    "bm_procedure_step_role",
    "bm_procedure_step_sop",
    "bm_procedure_task",
    "bm_procedure_task_instance",
    "bm_procedure_task_instance_history",
    "bm_process",
    "bm_process_batch_record",
    "bm_process_confirm",
    "bm_process_dashboard_config",
    "bm_process_production_line",
    "bm_process_record_order",
    "bm_process_relation",
    "bm_process_relation_material",
    "bm_process_version",
    "bm_product_change_team",
    "bm_product_formula",
    "bm_product_formula_material",
    "bm_product_formula_version",
    "bm_product_instruction",
    "bm_product_instruction_team",
    "bm_product_plan",
    "bm_product_plan_code_rule",
    "bm_product_plan_no_info",
    "bm_product_plan_relation",
    "bm_product_plan_team",
    "bm_production_plan",
    "bm_production_plan_item",
    "bm_requisition_plan",
    "bm_requisition_plan_reserved",
    "bm_requisition_received",
    "bm_requisition_received_batch",
    "bm_requisition_received_material",
    "bm_reserve_component_instance",
    "bm_reserve_component_material",
    "bm_resource_permission",
    "bm_storage",
    "bm_storage_material",
    "bm_storage_material_batch",
    "bm_storage_material_charge_recycle",
    "bm_storage_material_reserve",
    "bm_tare_weigh_config",
    "bm_team_production_line",
    "bm_weigh_centre",
    "bm_weigh_centre_category",
    "bm_weigh_centre_station",
    "bm_weigh_data",
    "bm_weigh_execute_consume_record",
    "bm_weigh_execute_weigh_record",
    "bm_weigh_input_process",
    "bm_weigh_input_record",
    "bm_weigh_log",
    "bm_weigh_requirement",
    "bm_weigh_task"
]

engine = create_engine(DATABASE_URL, echo=True)

if __name__ == '__main__':
    cur = engine.connect()
    sql = ""
    for table_name in table_list:
        result = cur.execute(statement=text(f'show create table {table_name}'))
        for item in result.tuples().fetchall():
            sql += f'{str(item[1])}\n\n'
    with open("sql/create_table.sql", "w") as file:
        file.write(sql)
        file.close()
